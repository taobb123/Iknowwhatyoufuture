import{J as a}from"./index-BAUYqbCF.js";const i={useDatabase:!0,fallbackToLocalStorage:!1,apiBaseUrl:"/api"};class n{constructor(t={}){this.config={...i,...t}}async getAllBoards(){try{if(this.config.useDatabase){const t=await a.boards.getAllBoards();if(t.success&&t.data)return(t.data.data||t.data).map(r=>({id:r.id,name:r.name,description:r.description||"",icon:r.icon||"🎮",color:r.color||"from-blue-600 to-purple-600",order:r.sort_order||0,isActive:r.is_active===1||r.is_active===!0,topicCount:r.topic_count||0,createdAt:r.created_at,updatedAt:r.updated_at}))}return this.config.fallbackToLocalStorage?(console.warn("⚠️ 数据库不可用，Board管理不支持localStorage fallback"),[]):[]}catch(t){return console.error("获取板块列表失败:",t),[]}}async getBoardById(t){try{if(this.config.useDatabase){const o=await a.boards.getBoardById(t);if(o.success&&o.data){const r=o.data;return{id:r.id,name:r.name,description:r.description||"",icon:r.icon||"🎮",color:r.color||"from-blue-600 to-purple-600",order:r.sort_order||0,isActive:r.is_active===1||r.is_active===!0,topicCount:r.topic_count||0,createdAt:r.created_at,updatedAt:r.updated_at}}}return null}catch(o){return console.error("根据ID获取板块失败:",o),null}}async addBoard(t){try{if(this.config.useDatabase){const o=await a.boards.createBoard({name:t.name,description:t.description,icon:t.icon,color:t.color,sort_order:t.order,is_active:t.isActive});if(o.success&&o.data){const r=o.data;return{id:r.id,name:r.name,description:r.description||"",icon:r.icon||"🎮",color:r.color||"from-blue-600 to-purple-600",order:r.sort_order||0,isActive:r.is_active===1||r.is_active===!0,topicCount:r.topic_count||0,createdAt:r.created_at,updatedAt:r.updated_at}}else throw new Error(o.error||"创建板块失败")}throw new Error("数据库不可用")}catch(o){throw console.error("添加板块失败:",o),o}}async updateBoard(t,o){try{if(this.config.useDatabase){const r=await a.boards.updateBoard(t,{name:o.name,description:o.description,icon:o.icon,color:o.color,sort_order:o.order,is_active:o.isActive});if(r.success&&r.data){const e=r.data;return{id:e.id,name:e.name,description:e.description||"",icon:e.icon||"🎮",color:e.color||"from-blue-600 to-purple-600",order:e.sort_order||0,isActive:e.is_active===1||e.is_active===!0,topicCount:e.topic_count||0,createdAt:e.created_at,updatedAt:e.updated_at}}else throw new Error(r.error||"更新板块失败")}throw new Error("数据库不可用")}catch(r){throw console.error("更新板块失败:",r),r}}async deleteBoard(t){try{if(this.config.useDatabase)return(await a.boards.deleteBoard(t)).success;throw new Error("数据库不可用")}catch(o){throw console.error("删除板块失败:",o),o}}async getBoardStats(){try{if(this.config.useDatabase){const t=await a.boards.getBoardStats();if(t.success&&t.data)return t.data}return{total_boards:0,active_boards:0,total_topics:0,avg_topics_per_board:0}}catch(t){return console.error("获取板块统计失败:",t),{total_boards:0,active_boards:0,total_topics:0,avg_topics_per_board:0}}}async testConnection(){try{return await a.testConnection()}catch(t){return console.error("测试数据库连接失败:",t),!1}}switchDataSource(t){console.warn("在MySQL-only架构中，switchDataSource方法不再有实际作用")}}const s=new n,l=()=>s.getAllBoards(),u=c=>s.addBoard(c),p=(c,t)=>s.updateBoard(c,t),_=c=>s.deleteBoard(c);export{u as a,_ as d,l as g,p as u};
